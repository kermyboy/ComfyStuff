# .github/workflows/build.yml
name: build-and-push

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"            # e.g. v6, v6.1, v6.1.0
  workflow_dispatch:     # manual run with optional version input
    inputs:
      version:
        description: "Optional version tag to publish (e.g. v6)"
        required: false
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_REPO: kermatron/comfystuff   # <-- change if needed

    steps:
      - uses: actions/checkout@v4

      - name: Check required secrets
        run: |
          [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] || { echo "Missing DOCKERHUB_USERNAME"; exit 1; }
          [ - n "${{ secrets.DOCKERHUB_TOKEN }}" ]   || { echo "Missing DOCKERHUB_TOKEN"; exit 1; }

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Compute tags:
      # - On tag push (v*, e.g. v6): add `${{ github.ref_name }}` and `latest`
      # - On main branch push: only `latest`
      # - On manual run with input.version: add that version and `latest`
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REPO }}
          tags: |
            # tag events like "v6" -> publish :v6
            type=ref,event=tag
            # latest on main
            type=raw,value=latest,enable={{is_default_branch}}
            # manual override: workflow_dispatch input
            type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version != '' }}

      - name: Show computed tags
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64            # CUDA needs amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
